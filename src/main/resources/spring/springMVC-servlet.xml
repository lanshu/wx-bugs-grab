<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/mvc  
    http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
    http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">

	<!-- 开启controller注解支持 -->
	<!-- 注意事项请参考：http://jinnianshilongnian.iteye.com/blog/1762632 -->
	<context:component-scan base-package="cn.pigpi.grab.web"
		use-default-filters="false">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
		<context:include-filter type="annotation"
			expression="org.springframework.web.bind.annotation.ControllerAdvice" />
	</context:component-scan>

	<mvc:default-servlet-handler/>
	<!-- 扫描静态文件 -->
	<!-- 
	<mvc:resources mapping="*.ico" location="/" />
	<mvc:resources mapping="/static/**" location="/static/" />
	<mvc:resources mapping="/temp/**" location="/temp/" />
	 -->
	<!-- 拦截器 -->
	<!-- 
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean id="encryptInterceptor" class="cn.pigpi.grab.web.interceptor.EncryptInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors> 
	-->

	<!-- to generate String HttpResponse to client -->
	<bean id="stringHttpMessageConverter"
		class="org.springframework.http.converter.StringHttpMessageConverter">
		<constructor-arg value="UTF-8" />
		<property name="supportedMediaTypes">
			<list>
				<value>text/plain;charset=UTF-8</value>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>

	<!-- to generate JSON responses using fastJson -->
	<!-- 
	<bean id="fastJsonHttpMessageConverter"
		class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>application/json;charset=UTF-8</value>
				<value>text/html;charset=UTF-8</value>避免IE出现下载JSON文件的情况
			</list>
		</property>
		<property name="features">
			<list>
				<value>WriteNullListAsEmpty</value> List字段如果为null,输出为[],而非null
				<value>DisableCircularReferenceDetect</value> 禁止循环引用检测
			</list>
		</property>
	</bean> 
	-->
	
	<!-- to generate JSON responses using Jackson -->
	<bean id="jacksonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>application/json;charset=UTF-8</value>
				<value>text/html;charset=UTF-8</value><!-- 避免IE出现下载JSON文件的情况 -->
			</list>
		</property>
		<property name="objectMapper" ref="jacksonObjectMapper" />
	</bean>

	<!-- Jackson Mapper -->
	<bean id="jacksonObjectMapper" class="com.fasterxml.jackson.databind.ObjectMapper">
		<!-- 返回的JSON对象,去除NULL值字段 -->
		<!-- 
		<property name="serializationInclusion"> 
			<value type="com.fasterxml.jackson.annotation.JsonInclude.Include">NON_NULL</value> 
		</property> 
		-->
	</bean>
	<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetObject" ref="jacksonObjectMapper" />
		<property name="targetMethod" value="configure" />
		<property name="arguments">
			<list>
				<value type="com.fasterxml.jackson.core.JsonGenerator.Feature">WRITE_NUMBERS_AS_STRINGS</value> <!-- 数字加引号 -->
				<value>true</value>
			</list>
		</property>
	</bean>
	
	<!-- 采用SpringMVC自带的JSON转换工具，支持@ResponseBody注解 -->
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<!--确保session线程安全 -->
		<property name="synchronizeOnSession" value="true" />
		<property name="messageConverters">
			<list>
				<ref bean="stringHttpMessageConverter" />
				<ref bean="jacksonMessageConverter" />
			</list>
		</property>
		<!-- 自定义返回值拦截 -->
		<!-- 
		<property name="responseBodyAdvice">
			<list>
				<bean class="cn.pigpi.grab.web.interceptor.EncryptResponseBodyAdvice"></bean>
			</list>
		</property> 
		-->
	</bean>

	<!-- 采用注解方式配置MVC，该配置信息必须放在 “数据处理器”的下面，或者是包含“数据处理器” -->
	<mvc:annotation-driven />

	<!-- Default viewResoler handler -->
	<bean id="viewResolverCommon"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" 
			value="org.springframework.web.servlet.view.InternalResourceView" />
		<property name="prefix" value="/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- Gobale exception setting -->
	<bean id="exceptionResolver"
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="org.apache.shiro.authz.UnauthorizedException">global/limit</prop>
				<prop key="java.lang.Exception">global/500</prop>
				<prop key="java.lang.Throwable">global/error</prop>
			</props>
		</property>
		<property name="statusCodes">
			<props>
				<prop key="global/500">500</prop>
				<prop key="global/404">404</prop>
			</props>
		</property>
		<property name="warnLogCategory" value="WARN" />
		<property name="defaultErrorView" value="global/error" />
		<property name="defaultStatusCode" value="500" />
	</bean>

	<!-- Default MessageSource(国际化支持) -->
	<!-- <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource"> 
		<property name="basename" value="messages"/> </bean> -->

	<!-- 文件上传配置 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 设置上传文件大小的参数 10M -->
		<property name="maxUploadSize" value="0xA00000" />
		<!-- 设置编码方式 -->
		<property name="defaultEncoding" value="UTF-8" />
	</bean>
</beans>
	
	